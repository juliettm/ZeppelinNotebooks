{
  "paragraphs": [
    {
      "text": "import org.apache.spark.ml.evaluation.RegressionEvaluator\nimport org.apache.spark.ml.recommendation.ALS",
      "dateUpdated": "Jan 13, 2017 12:15:21 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1484306094706_-1777812403",
      "id": "20170113-121454_541755579",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nimport org.apache.spark.ml.evaluation.RegressionEvaluator\n\nimport org.apache.spark.ml.recommendation.ALS\n"
      },
      "dateCreated": "Jan 13, 2017 12:14:54 PM",
      "dateStarted": "Jan 13, 2017 12:15:22 PM",
      "dateFinished": "Jan 13, 2017 12:16:05 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "case class Rating(userId: Int, edId: Int, rating: Float, timestamp: Long)\ndef parseRating(str: String): Rating \u003d {\n  val fields \u003d str.split(\"::\")\n  assert(fields.size \u003d\u003d 4)\n  Rating(fields(0).toInt, fields(1).toInt, fields(2).toFloat, fields(3).toLong)\n}",
      "dateUpdated": "Jan 13, 2017 12:37:33 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1484306121765_-860308869",
      "id": "20170113-121521_470312194",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\ndefined class Rating\n\nparseRating: (str: String)Rating\n"
      },
      "dateCreated": "Jan 13, 2017 12:15:21 PM",
      "dateStarted": "Jan 13, 2017 12:37:34 PM",
      "dateFinished": "Jan 13, 2017 12:37:37 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val ratings \u003d spark.read.textFile(\"/Users/24s/Documents/24s/Filtrado_colaborativo/Data/editions_ratings.csv\")\n  .map(parseRating)\n  .toDF()\nval Array(training, test) \u003d ratings.randomSplit(Array(0.8, 0.2))",
      "dateUpdated": "Jan 13, 2017 12:37:43 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1484306190801_697832231",
      "id": "20170113-121630_656090841",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nratings: org.apache.spark.sql.DataFrame \u003d [userId: int, edId: int ... 2 more fields]\n\n\ntraining: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [userId: int, edId: int ... 2 more fields]\ntest: org.apache.spark.sql.Dataset[org.apache.spark.sql.Row] \u003d [userId: int, edId: int ... 2 more fields]\n"
      },
      "dateCreated": "Jan 13, 2017 12:16:30 PM",
      "dateStarted": "Jan 13, 2017 12:37:44 PM",
      "dateFinished": "Jan 13, 2017 12:37:48 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "training.take(1)",
      "dateUpdated": "Jan 13, 2017 12:29:04 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1484306915732_-1664688004",
      "id": "20170113-122835_549187357",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nres5: Array[org.apache.spark.sql.Row] \u003d Array([19,5005,5.0,1400000000])\n"
      },
      "dateCreated": "Jan 13, 2017 12:28:35 PM",
      "dateStarted": "Jan 13, 2017 12:29:04 PM",
      "dateFinished": "Jan 13, 2017 12:29:14 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// Build the recommendation model using ALS on the training data\nval als \u003d new ALS()\n  .setMaxIter(5)\n  .setRegParam(0.01)\n  .setUserCol(\"userId\")\n  .setItemCol(\"edId\")\n  .setRatingCol(\"rating\")\nval model \u003d als.fit(training)",
      "dateUpdated": "Jan 13, 2017 12:37:57 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1484306223555_969895676",
      "id": "20170113-121703_790856055",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nals: org.apache.spark.ml.recommendation.ALS \u003d als_d043de7b6abb\n\nmodel: org.apache.spark.ml.recommendation.ALSModel \u003d als_d043de7b6abb\n"
      },
      "dateCreated": "Jan 13, 2017 12:17:03 PM",
      "dateStarted": "Jan 13, 2017 12:37:57 PM",
      "dateFinished": "Jan 13, 2017 12:38:07 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "// Evaluate the model by computing the RMSE on the test data\nval predictions \u003d model.transform(test)",
      "dateUpdated": "Jan 13, 2017 12:38:14 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1484306573356_407847052",
      "id": "20170113-122253_2065922920",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\npredictions: org.apache.spark.sql.DataFrame \u003d [userId: int, edId: int ... 3 more fields]\n"
      },
      "dateCreated": "Jan 13, 2017 12:22:53 PM",
      "dateStarted": "Jan 13, 2017 12:38:14 PM",
      "dateFinished": "Jan 13, 2017 12:38:15 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "predictions.take(2)",
      "dateUpdated": "Jan 13, 2017 12:38:22 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1484307111674_1603428806",
      "id": "20170113-123151_111857013",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nres23: Array[org.apache.spark.sql.Row] \u003d Array([812785,5156,5.0,1400000000,NaN], [959192,8638,5.0,1400000000,0.030572057])\n"
      },
      "dateCreated": "Jan 13, 2017 12:31:51 PM",
      "dateStarted": "Jan 13, 2017 12:38:22 PM",
      "dateFinished": "Jan 13, 2017 12:38:40 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "val evaluator \u003d new RegressionEvaluator()\n  .setMetricName(\"rmse\")\n  .setLabelCol(\"rating\")\n  .setPredictionCol(\"prediction\")\nval rmse \u003d evaluator.evaluate(predictions)\nprintln(s\"Root-mean-square error \u003d $rmse\")",
      "dateUpdated": "Jan 13, 2017 12:38:51 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1484307006084_908081919",
      "id": "20170113-123006_1109280837",
      "result": {
        "code": "SUCCESS",
        "type": "TEXT",
        "msg": "\nevaluator: org.apache.spark.ml.evaluation.RegressionEvaluator \u003d regEval_8977a39d62e6\n\nrmse: Double \u003d NaN\nRoot-mean-square error \u003d NaN\n"
      },
      "dateCreated": "Jan 13, 2017 12:30:06 PM",
      "dateStarted": "Jan 13, 2017 12:38:51 PM",
      "dateFinished": "Jan 13, 2017 12:39:15 PM",
      "status": "FINISHED",
      "progressUpdateIntervalMs": 500
    },
    {
      "text": "",
      "dateUpdated": "Jan 13, 2017 12:30:50 PM",
      "config": {
        "colWidth": 12.0,
        "graph": {
          "mode": "table",
          "height": 300.0,
          "optionOpen": false,
          "keys": [],
          "values": [],
          "groups": [],
          "scatter": {}
        },
        "enabled": true,
        "editorMode": "ace/mode/scala"
      },
      "settings": {
        "params": {},
        "forms": {}
      },
      "jobName": "paragraph_1484307038983_269596314",
      "id": "20170113-123038_841608401",
      "dateCreated": "Jan 13, 2017 12:30:38 PM",
      "status": "READY",
      "progressUpdateIntervalMs": 500
    }
  ],
  "name": "Colaborative Filtering",
  "id": "2C79NW8HM",
  "angularObjects": {
    "2C5FFECRU:shared_process": [],
    "2C93JP36N:shared_process": [],
    "2C7JTTY82:shared_process": [],
    "2C8EJEW8Y:shared_process": [],
    "2C8ERSTAS:shared_process": [],
    "2C7KRVW4Q:shared_process": [],
    "2C96N7S5N:shared_process": [],
    "2C86162WT:shared_process": [],
    "2C8M8DRJ9:shared_process": [],
    "2C7ZDDEB5:shared_process": [],
    "2C71KN9GQ:shared_process": [],
    "2C7QNFVBF:shared_process": [],
    "2C5GADVTS:shared_process": [],
    "2C8UHUXRM:shared_process": [],
    "2C8JAU3WE:shared_process": [],
    "2C6S5PRJH:shared_process": [],
    "2C95CZY97:shared_process": [],
    "2C72K2MPN:shared_process": []
  },
  "config": {},
  "info": {}
}